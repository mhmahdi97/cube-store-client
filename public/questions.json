[
  {
    "question": "What is an access token and refresh token? How do they work and where should we store them on the client-side?",
    "answer": "An access token is a credential that represents the authorization granted to a user or client application to access protected resources. It is typically used for authentication and authorization in APIs. A refresh token is a credential used to obtain a new access token without requiring the user to reauthenticate. Access tokens are usually stored in memory or local storage on the client-side, while refresh tokens should be stored securely, such as in an HTTP-only cookie or server-side session."
  },
  {
    "question": "Compare SQL and NoSQL databases?",
    "answer": "SQL databases are relational databases that use structured query language (SQL) for defining and manipulating the data. They are suitable for structured data and offer ACID (Atomicity, Consistency, Isolation, Durability) properties. NoSQL databases, on the other hand, are non-relational databases that provide a flexible schema and horizontal scalability. They are suitable for unstructured or semi-structured data and offer high availability and scalability."
  },
  {
    "question": "What is Express.js? What is Nest JS?",
    "answer": "Express.js is a popular web application framework for Node.js. It provides a minimalistic and flexible set of features for building web applications and APIs. Express.js focuses on simplicity and extensibility, making it easy to create server-side applications in Node.js. NestJS, on the other hand, is a TypeScript-based progressive framework for building efficient and scalable server-side applications. It follows the modular architecture and incorporates concepts from both object-oriented programming and functional programming."
  },
  {
    "question": "What is MongoDB aggregate and how does it work?",
    "answer": "MongoDB's aggregate is a powerful framework for performing data aggregation operations, such as filtering, grouping, transforming, and analyzing data in the MongoDB database. It allows you to perform complex queries and computations on your data using an aggregation pipeline. The aggregation pipeline consists of multiple stages that process documents sequentially, allowing you to reshape and manipulate the data. The pipeline stages include operations like match, group, sort, project, and more. Aggregation in MongoDB provides powerful capabilities for data analysis and reporting."
  }
]
